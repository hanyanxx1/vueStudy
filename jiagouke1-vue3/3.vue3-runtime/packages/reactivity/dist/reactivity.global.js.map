{"version":3,"file":"reactivity.global.js","sources":["../../shared/src/index.ts","../src/effect.ts","../src/baseHandlers.ts","../src/reactive.ts"],"sourcesContent":["export const isObject = (value) => typeof value == \"object\" && value !== null;\nexport const extend = Object.assign;\n","export function effect(fn, options: any = {}) {\n  // 我需要让这个effect变成响应的effect，可以做到数据变化重新执行\n  const effect = createReactiveEffect(fn, options);\n  // 默认的effect会先执行\n  if (!options.lazy) {\n    // 响应式的effect默认会先执行一次\n    effect();\n  }\n  return effect;\n}\n\nlet uid = 0;\nlet activeEffect;\nconst effectStack = [];\nfunction createReactiveEffect(fn, options) {\n  const effect = function reactiveEffect() {\n    if (!effectStack.includes(effect)) {\n      // 保证effect没有加入到effectStack中\n      try {\n        effectStack.push(effect);\n        activeEffect = effect;\n        return fn(); // 函数执行时会取值  会执行get方法\n      } finally {\n        effectStack.pop();\n        activeEffect = effectStack[effectStack.length - 1];\n      }\n    }\n  };\n  effect.id = uid++; // 制作一个effect标识 用于区分effect\n  effect._isEffect = true; // 用于标识这个是响应式effect\n  effect.raw = fn; // 保留effect对应的原函数\n  effect.options = options; // 在effect上保存用户的属性\n  return effect;\n}\n\nconst targetMap = new WeakMap();\n// 让，某个对象中的属性 收集当前他对应的effect函数\nexport function track(target, type, key) {\n  //  activeEffect; // 当前正在运行的effect\n  if (activeEffect === undefined) {\n    // 此属性不用收集依赖，因为没在effect中使用\n    return;\n  }\n  let depsMap = targetMap.get(target);\n  if (!depsMap) {\n    targetMap.set(target, (depsMap = new Map()));\n  }\n  let dep = depsMap.get(key);\n  if (!dep) {\n    depsMap.set(key, (dep = new Set()));\n  }\n  if (!dep.has(activeEffect)) {\n    dep.add(activeEffect);\n  }\n}\n\n// 函数调用是一个栈型结构\n// effect(()=>{ // effect1   [effect1]\n//     state.name -> effect1\n//     effect(()=>{ // effect2\n//         state.age -> effect2\n//     })\n//     state.address -> effect1\n// })\n","// 实现 new Proxy(target, handler)\nimport { extend, isObject } from \"@vue/shared\";\nimport { track } from \"./effect\";\nimport { TrackOpTypes } from \"./operators\";\nimport { reactive, readonly } from \"./reactive\";\n\nconst get = createGetter();\nconst shallowGet = createGetter(false, true);\nconst readonlyGet = createGetter(true);\nconst showllowReadonlyGet = createGetter(true, true);\nconst set = createSetter();\nconst shallowSet = createSetter(true);\nexport const mutableHandlers = {\n  get,\n  set,\n};\nexport const shallowReactiveHandlers = {\n  get: shallowGet,\n  set: shallowSet,\n};\n\nlet readonlyObj = {\n  set: (target, key) => {\n    console.warn(`set on key ${key} falied`);\n  },\n};\nexport const readonlyHandlers = extend(\n  {\n    get: readonlyGet,\n  },\n  readonlyObj\n);\nexport const shallowReadonlyHandlers = extend(\n  {\n    get: showllowReadonlyGet,\n  },\n  readonlyObj\n);\n\n// 是不是仅读的，仅读的属性set时会报异常\n// 是不是深度的\nfunction createGetter(isReadonly = false, shallow = false) {\n  // 拦截获取功能\n  return function get(target, key, receiver) {\n    // let proxy = reactive({obj:{}})\n    // proxy + reflect\n    // 后续Object上的方法 会被迁移到Reflect Reflect.getProptypeof()\n    // 以前target[key] = value 方式设置值可能会失败 ， 并不会报异常 ，也没有返回值标识\n    // Reflect 方法具备返回值\n    // reflect 使用可以不使用 proxy es6语法\n\n    const res = Reflect.get(target, key, receiver);\n    if (!isReadonly) {\n      // 收集依赖，等会数据变化后更新对应的视图\n      track(target, TrackOpTypes.GET, key);\n    }\n    if (shallow) {\n      return res;\n    }\n    if (isObject(res)) {\n      // vue2 是一上来就递归，vue3 是当取值时会进行代理 。 vue3的代理模式是懒代理\n      return isReadonly ? readonly(res) : reactive(res);\n    }\n    return res;\n  };\n}\nfunction createSetter(shallow = false) {\n  // 拦截设置功能\n  return function set(target, key, value, receiver) {\n    const result = Reflect.set(target, key, value, receiver);\n\n    return result;\n  };\n}\n","import { isObject } from \"@vue/shared\";\nimport {\n  mutableHandlers,\n  shallowReactiveHandlers,\n  readonlyHandlers,\n  shallowReadonlyHandlers,\n} from \"./baseHandlers\";\n\nexport function reactive(target) {\n  return createReactiveObject(target, false, mutableHandlers);\n}\nexport function shallowReactive(target) {\n  return createReactiveObject(target, false, shallowReactiveHandlers);\n}\n\nexport function readonly(target) {\n  return createReactiveObject(target, true, readonlyHandlers);\n}\n\nexport function shallowReadonly(target) {\n  return createReactiveObject(target, true, shallowReadonlyHandlers);\n}\n\n// 是不是仅读 是不是深度， 柯里化  new Proxy() 最核心的需要拦截 数据的读取和数据的修改  get set\nconst reactiveMap = new WeakMap(); // 会自动垃圾回收，不会造成内存泄漏， 存储的key只能是对象\nconst readonlyMap = new WeakMap();\nexport function createReactiveObject(target, isReadonly, baseHandlers) {\n  // 如果目标不是对象 没法拦截了，reactive这个api只能拦截对象类型\n  if (!isObject(target)) {\n    return target;\n  }\n  // 如果某个对象已经被代理过了 就不要再次代理了  可能一个对象 被代理是深度 又被仅读代理了\n  const proxyMap = isReadonly ? readonlyMap : reactiveMap;\n  const existProxy = proxyMap.get(target);\n  if (existProxy) {\n    return existProxy; // 如果已经被代理了 直接返回即可\n  }\n  const proxy = new Proxy(target, baseHandlers);\n  proxyMap.set(target, proxy); // 将要代理的对象 和对应代理结果缓存起来\n\n  return proxy;\n}\n"],"names":[],"mappings":"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"}